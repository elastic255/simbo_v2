[General]
network = net2

**.controleSuper.matlab = false
**.controleSuper.jacamo = false

**.comp[*].numTcpApps = 2
**.comp1[*].numTcpApps = 2
**.inicial.numTcpApps = 2

**.comp[*].tcpApp[*].connectAddress = "server"
**.comp1[*].tcpApp[*].connectAddress = "server"
**.inicial.tcpApp[*].connectAddress = "server"

#### tcp apps - comp
**.comp[*].tcpApp[0].typename = "Appteste"  # FTP
**.comp[*].tcpApp[0].connectPort = 10021
**.comp[*].tcpApp[0].dataTransferMode = "bytestream"
**.comp[*].tcpApp[1].typename = "BotnetApp"  # FTP
**.comp[*].tcpApp[1].infectado = false
**.comp[*].tcpApp[1].connectPort = 10022
**.comp[*].tcpApp[1].dataTransferMode = "object"

#### tcp apps - comp1
**.comp1[*].tcpApp[0].typename = "Appteste"  # FTP
**.comp1[*].tcpApp[0].connectPort = 10021
**.comp1[*].tcpApp[0].dataTransferMode = "bytestream"
**.comp1[*].tcpApp[1].typename = "BotnetApp"  # FTP
**.comp1[*].tcpApp[1].infectado = false
**.comp1[*].tcpApp[1].connectPort = 10022
**.comp1[*].tcpApp[1].dataTransferMode = "object"

#### tcp apps - inicial
**.inicial.tcpApp[0].typename = "Appteste"  # FTP
**.inicial.tcpApp[0].connectPort = 10021
**.inicial.tcpApp[0].dataTransferMode = "bytestream"
**.inicial.tcpApp[1].typename = "BotnetApp"  # FTP
**.inicial.tcpApp[1].infectado = true
**.inicial.tcpApp[1].connectPort = 10022
**.inicial.tcpApp[1].dataTransferMode = "object"

#### Ping apps 
# ping app (all hosts ping all interface addresses in the network)
**.numPingApps = 1
**.pingApp[*].typename = BotnetPing
**.pingApp[*].destAddr = "*"
**.pingApp[*].count = 1
**.pingApp[*].startTime = 0s
**.pingApp[*].sleepDuration = 0s
**.pingApp[*].hopLimit = 2


### tcp apps - server
**.server.numTcpApps = 2
**.server.tcpApp[0].typename = "TCPSinkApp"
**.server.tcpApp[0].localPort = 10021
**.tcpApp[0].dataTransferMode = "bytestream"
**.server.tcpApp[1].typename = "BotnetApp"
**.server.tcpApp[1].localPort = 10022
**.tcpApp[1].dataTransferMode = "object"




**.tcpApp[*].thinkTime = 0s
**.tcpApp[*].idleInterval = 0s



### tcp settings
**.tcp.advertisedWindow = 65535                      # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = false                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 500                                     # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TCPReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.recordStats = true                            # recording of seqNum etc. into output vectors enabled/disabled